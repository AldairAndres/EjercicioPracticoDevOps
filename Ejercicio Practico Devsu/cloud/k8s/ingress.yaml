# file: 05-ingress.yaml
apiVersion: networking.k8s.io/v1     # API estable para Ingress.
kind: Ingress                        # Recurso que define reglas HTTP/HTTPS.
metadata:
  name: prueba-java-ingress          # Nombre del Ingress.
  namespace: namespace-prueba-java 
  labels:
    app: prueba-java
  annotations:
    kubernetes.io/ingress.class: nginx        # Si tu IngressController aún lee la anotación.
    nginx.ingress.kubernetes.io/rewrite-target: /$1  # Solo si usas paths con captura (no necesario aquí).
spec:
  ingressClassName: nginx            # Forma recomendada de definir el controlador.
  rules:
    - host: app.demo.tu-dominio.com  # Host (DNS) que apuntará al Ingress público de AKS.
      http:
        paths:
          - path: /api               # Ruta que empieza por /api.
            pathType: Prefix         # Coincidencia por prefijo literal.
            backend:
              service:
                name: prueba-java-svc   # Service al que enviamos el tráfico.
                port:
                  number: 80
          - path: /healthz           # Ruta para health externo (opcional).
            pathType: Prefix
            backend:
              service:
                name: prueba-java-svc
                port:
                  number: 80

# ----------------------------------------------------------------------
# Buenas prácticas
# - evitar regex (/.*) con pathType Prefix.
# - definir ingressClassName en lugar de la annotation deprecada.
# - separar paths si quieres exponer /healthz o estáticos a otro backend.
# - un Ingress por host mantiene todo ordenado; usa más paths o más Ingress según lo necesites.
